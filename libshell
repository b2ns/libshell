#!/usr/bin/env bash

declare -g LIBSHELL_SOURCED="${LIBSHELL_SOURCED:-0}"

# libshell has been sourced so we just return
(("$LIBSHELL_SOURCED" == 1)) && return 0

declare -g LIBSHELL_PATH=""
LIBSHELL_PATH="$(cd "${BASH_SOURCE[0]%/*}" && pwd)/lib"
declare -Ag LIBSHELL_IMPORTED_LIBS
declare -g IMPORT_ALL_LIBS="${IMPORT_ALL_LIBS:-1}"

import() {
  local scriptRoot="${BASH_SOURCE[1]:-$0}"
  scriptRoot="$(cd "${scriptRoot%/*}" && pwd)"
  for lib in "$@"; do
    if [[ "$lib" == './'* ]]; then
      lib="${lib:2}"
    fi
    if ! __source_path__ "$scriptRoot/$lib" && ! __source_path__ "$lib" && ! __source_path__ "$LIBSHELL_PATH/$lib"; then
      echo "failed to import $lib" >&2
      return 1
    fi
  done
}

__source_path__() {
  local lib="$1"
  if [[ -d "$lib" ]]; then
    for file in "$lib"/*.sh; do
      __source_file__ "$file"
    done
  else
    __source_file__ "$lib" || __source_file__ "${lib}.sh"
  fi
}

__source_file__() {
  local lib="$1"

  [[ ! -f "$lib" ]] && return 1

  lib="$(__abspath__ "$lib")"

  if [[ ${LIBSHELL_IMPORTED_LIBS["$lib"]+_} ]]; then
    return 0
  fi

  LIBSHELL_IMPORTED_LIBS+=(["$lib"]=1)

  source "$lib"
}

__abspath__() {
  local file="$1"
  printf '%s\n' "$(cd "$(dirname "$file")" && pwd)/$(basename "$file")"
}

# import all libs
# use IMPORT_ALL_LIBS=0 to disable this feature
if ((IMPORT_ALL_LIBS == 1)); then
  import "$LIBSHELL_PATH"/*.sh
fi

# libshell has been sourced
LIBSHELL_SOURCED=1
